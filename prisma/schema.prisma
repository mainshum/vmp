// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider = "prisma-client-js"
  // createInputTypes = false
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum VMPRole {
  NONE
  CLIENT
  VENDOR
  ADMIN
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?

  image    String?
  accounts Account[]
  sessions Session[]

  role VMPRole @default(NONE)
}

enum ProjectFor {
  INTERNAL
  EXTERNAL
}

enum CompanySize {
  BELOW10
  FROM11TO50
  FROM50TO250
  FROM250TO1000
  ABOVE1000
}

model Customer {
  /// @zod.string.min(3)
  id           String      @id @default(cuid())
  /// @zod.string.min(3)
  companyName  String
  /// @zod.string.min(3)
  addressLine1 String
  /// @zod.string.min(3)
  addressLine2 String
  /// @zod.string.min(3)
  postalCode   String
  /// @zod.string.min(3)
  city         String
  /// @zod.string.min(3)
  taxId        String
  /// @zod.string.min(3)
  name         String
  /// @zod.string.min(3)
  surname      String
  /// @zod.string.min(3)
  position     String
  /// @zod.string.min(3)
  mail         String
  /// @zod.string.min(3)
  phone        String
  companySize  CompanySize @default(BELOW10)
  projectFor   ProjectFor  @default(INTERNAL)
}

enum OpportunityStatus {
  DRAFT
  PENDING
  NOOFFERS
  WITHOFFERS
  EXPIRED
}

model Opportunity {
  id           String            @id @default(cuid())
  name         String
  status       OpportunityStatus @default(PENDING)
  validUntil   DateTime?
  creationDate DateTime?
  offers       Offer[]
}

model Offer {
  id            String       @id @default(cuid())
  matchingGrade Int?
  opportunity   Opportunity? @relation(fields: [opportunityId], references: [id])
  opportunityId String
}
